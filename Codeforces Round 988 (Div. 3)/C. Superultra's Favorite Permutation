import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); 
        while (t-- > 0) {
            int n = sc.nextInt(); 
            if(n<=4) System.out.println(-1);
            else{
                ArrayList<Integer> even = new ArrayList<>();
                ArrayList<Integer> odd = new ArrayList<>();
                odd.add(5); //add 5 to odd in start
                for(int i=1;i<=n;i++){
                    if(i!=4 && i!=5){
                        if((i&1)==0) even.add(i);
                        else odd.add(i);
                    }
                }
                even.add(4); //add 4 in last of even
                for(int i=0;i<even.size();i++){
                    System.out.print(even.get(i)+" ");
                }
                for(int i=0;i<odd.size();i++){
                    System.out.print(odd.get(i)+" ");
                }
                System.out.println();
            }
        }
        sc.close();
    }
}

/*
LOGIC---
n=2 => 1,2 => sum=3 => prime NOT POSSIBLE
n=3 => 1,3,2 => sum=4,5 => 5 is prime NOT POSSIBLE
n=4 => 1,3,4,2 => 4,7,6 => 7 is prime NOT POSSIBLE

EVEN+EVEN = EVEN
ODD+ODD=EVEN
ONLY PRIME EVEN IS 2. BUT 2 can never occur as a sum in permutation, so we are free here.

So, we can put all evne numbers first, then all odd numbers next
The only place prblem is when
E,E,E,E,E,O,O,O,O => WHERE e AND o comes in contact so we just need to find whether the permutation ahs an even +odd sum that is composite.
If it is we can for the permutation.

So, based on this logic for n=4 => 2,4,1,3 => still not possible

Reason the first pair that occurs so is 4,5 => 4+5 =9 is composite.
So, we cna first put all even ending with 4 and the all odd starting with 5.

And from n=1 to n=4 it will be impossible.
*/