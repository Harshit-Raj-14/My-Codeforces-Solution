import java.util.*;
public class main{
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
            int n=sc.nextInt();
            int arr[] = new int[n];
            for(int i=0;i<arr.length;i++){
                arr[i]=sc.nextInt();
            }
            int flag=1;
            for(int i=0;i<n;i++){
                if(i-1>=0 && arr[i-1]>arr[i]){
                    if(i!=1 && i!=2 && i!=4 && i!=8 && i!=16) flag=0;   //it can't be sorted
                }
            }
            if (flag==1) System.out.println("YES");
            else System.out.println("NO");
        }
        sc.close();
    }
}

/*
LOGIC---
Whena pplying operation on the array.
The prefic array formed by the valid m, will each get -1.
That means their relatives values won't change.

eg : x,y,a,b,c....
If x and y are valid indexes to apply operation:
=> x-1,y-1, a ,b , c

So, in a  way x and y comparisons won't mean anythign to us.
We can individually apply -1 on them and make them sorted.

And in a way using operations we can awlays make y and a sorted too. By taking y lower than a.

But what if the unsorted part is beyond a.
Now that can't be fixed even with operations.
So, in such a case it is not possible to make the array sorted.

*/